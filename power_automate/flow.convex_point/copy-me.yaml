# initialize delaying config, increase number if user ping area high
# edit value from "TPLL_HEIGHT":<value> to y level you want the bot will tpll to
Variables.ConvertJsonToCustomObject Json: $'''{\"ActionDelay\":0.75, \"OnReady\":10, \"TPLL_HEIGHT\":4}''' CustomObject=> Config
# main loop of this flow
LABEL on_main
Display.SelectFileDialog.SelectFiles Title: $'''Select the txt file generated by the Chrome extension.''' InitialDirectory: $'''C:\\Users\\mhsil\\Downloads''' FileFilter: $'''*.txt''' IsTopMost: False CheckIfFileExists: True SelectedFiles=> SelectedFiles ButtonPressed=> Response
IF Response = $'''Cancel''' THEN
    Display.ShowMessageDialog.ShowMessage Title: $'''ended''' Message: $'''process cancelled''' Icon: Display.Icon.None Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: True
    EXIT Code: 0
END
Display.ShowMessageDialog.ShowMessageWithTimeout Title: $'''ready''' Message: $'''please 
- hold your world edit wand
- head down
- cursor your mouse on paused minecraft screen 

you have %Config.OnReady * 2% seconds to get ready''' Icon: Display.Icon.Information Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: False Timeout: Config.OnReady
WAIT Config.OnReady
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Escape}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
WAIT Config.ActionDelay
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''t''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
WAIT Config.ActionDelay
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''//sel convex''' DelayBetweenKeystrokes: 20 SendTextAsHardwareKeys: False
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
WAIT Config.ActionDelay
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''t''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
WAIT Config.ActionDelay
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''//desel''' DelayBetweenKeystrokes: 20 SendTextAsHardwareKeys: False
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
WAIT Config.ActionDelay
# loop through multiple/single file selected
LOOP FOREACH File IN SelectedFiles
    File.ReadTextFromFile.ReadTextAsList File: File Encoding: File.TextFileEncoding.UTF8 Contents=> FileContents
    SET IsInit TO 0
    WAIT Config.ActionDelay
    LOOP FOREACH CurrentItem IN FileContents
        Text.SplitText.SplitWithDelimiter Text: CurrentItem CustomDelimiter: $'''\"''' IsRegEx: False Result=> TextList
        Text.Replace Text: TextList TextToFind: $''',''' IsRegEx: False IgnoreCase: False ReplaceWith: $'''%' '%''' ActivateEscapeSequences: False Result=> Replaced
        LOOP FOREACH ItemElement IN TextList
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''t''' DelayBetweenKeystrokes: 20 SendTextAsHardwareKeys: True
            WAIT Config.ActionDelay
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''/tpll %ItemElement% %Config.TPLL_HEIGHT%''' DelayBetweenKeystrokes: 20 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
            WAIT Config.ActionDelay
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''t''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
            WAIT Config.ActionDelay
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''/up 0''' DelayBetweenKeystrokes: 20 SendTextAsHardwareKeys: True
            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
            WAIT Config.ActionDelay
            IF IsInit = 0 THEN
                WAIT Config.ActionDelay * 2
                MouseAndKeyboard.SendMouseClick.Click ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0
                SET IsInit TO 1
            ELSE IF IsInit = 1 THEN
                MouseAndKeyboard.SendMouseClick.Click ClickType: MouseAndKeyboard.MouseClickType.RightClick MillisecondsDelay: 0
            END
            WAIT Config.ActionDelay * 2
        END
    END
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''t''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
    WAIT Config.ActionDelay
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''//curve 35:3''' DelayBetweenKeystrokes: 20 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
    # continue new file
    WAIT Config.ActionDelay
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''t''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
    WAIT Config.ActionDelay
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''//desel''' DelayBetweenKeystrokes: 20 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: True
    WAIT Config.ActionDelay * 3
END
Display.ShowMessageDialog.ShowMessageWithTimeout Title: $'''continue?''' Message: $'''proceed done! 
continue with new file(s)?''' Icon: Display.Icon.Question Buttons: Display.Buttons.YesNo DefaultButton: Display.DefaultButton.Button2 IsTopMost: True Timeout: 60 ButtonPressed=> IsContinue
IF IsContinue = $'''Yes''' THEN
    GOTO on_main
ELSE
    Display.ShowMessageDialog.ShowMessage Title: $'''ended''' Message: $'''all process has ended''' Icon: Display.Icon.None Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: True
END